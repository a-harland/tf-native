name: "Terraform"

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./envs/tst
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup Conftest
        uses: artis3n/setup-conftest@v0
        
      - name: Configure gcloud
        id: config_gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          version: "latest"
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: | 
          terraform plan -no-color -out=tfplan
          echo '::set-output name=TFPLAN::$(terraform show -json ./tfplan)'
        continue-on-error: true
  
      - name: Conftest Labels check
        id: ct_labels
        run: |
          ls -l
          echo "${{ steps.plan.outputs.TFPLAN }}" | conftest test --policy ../../policy/metadata
        
      - name: Request IAM Approval
        uses: actions/github-script@v5
        with:
          script: |
           const currentReviewers = await github.rest.pulls.listRequestedReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.number }},
           });
           if (currentReviewers.data.users.some(e => e.login === 'asaharland')) {
             console.log("Review already requested.");
           } else {
              github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: ${{ github.event.number }},
                reviewers: ["asaharland"]
              });
              console.log("Added IAM reviewer.");
           }
        
      - name: Check IAM Approval
        uses: actions/github-script@v5
        with:
          script: |
           const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.number }},
            })
           
           reviews.data.forEach(review => {
             if (review.user.login === "asaharland" && review.state.toUpperCase() === "APPROVED") {
                 console.log("IAM changes approved.");
             } else {
               // Fail checks.
             }
             console.log(review);
           });
      
      - uses: actions/github-script@v5
        with:
          script: |
            const reviewers = await github.rest.pulls.listRequestedReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.number }}
            })
            console.log(reviewers.data.users[0])

      - uses: actions/github-script@v5
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
            #### Terraform Metadata Check 📖\`${{ steps.ct_labels.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
